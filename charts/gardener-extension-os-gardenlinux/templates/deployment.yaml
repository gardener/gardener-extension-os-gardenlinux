apiVersion: apps/v1
kind: Deployment
metadata:
  name: gardener-extension-os-gardenlinux
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: gardener-extension-os-gardenlinux
    helm.sh/chart: gardener-extension-os-gardenlinux
    app.kubernetes.io/instance: {{ .Release.Name }}
    high-availability-config.resources.gardener.cloud/type: controller
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: gardener-extension-os-gardenlinux
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- if and .Values.metrics.enableScraping }}
      annotations:
        prometheus.io/name: "{{ .Release.Name }}"
        prometheus.io/scrape: "true"
        # default metrics endpoint in controller-runtime
        prometheus.io/port: "{{ .Values.metrics.port }}"
      {{- end }}
      labels:
        app.kubernetes.io/name: gardener-extension-os-gardenlinux
        app.kubernetes.io/instance: {{ .Release.Name }}
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.gardener.cloud/to-dns: allowed
    spec:
      priorityClassName: gardener-system-900
      serviceAccountName: gardener-extension-os-gardenlinux
      containers:
      - name: gardener-extension-os-gardenlinux
        image: {{ include "image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /gardener-extension-os-gardenlinux
        - --max-concurrent-reconciles={{ .Values.controllers.concurrentSyncs }}
        - --heartbeat-namespace={{ .Release.Namespace }} 
        - --heartbeat-renew-interval-seconds={{ .Values.controllers.heartbeat.renewIntervalSeconds }} 
        - --disable-controllers={{ .Values.disableControllers | join "," }}
        - --ignore-operation-annotation={{ .Values.controllers.ignoreOperationAnnotation }}
        - --gardener-version={{ .Values.gardener.version }}
        - --metrics-bind-address=:{{ .Values.metrics.port }}
        - --gardenlet-uses-gardener-node-agent={{ ternary .Values.gardener.gardenlet.featureGates.UseGardenerNodeAgent true (hasKey .Values.gardener.gardenlet.featureGates "UseGardenerNodeAgent") }}
        env:
        - name: LEADER_ELECTION_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | nindent 10 }}
{{- end }}
